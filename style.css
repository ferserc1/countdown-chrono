@font-face {
  font-family: 'Jersey';
  src: url('Jersey10-Regular.ttf');
}

:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;
}

html {
  margin: 0;
  padding: 0;
}

body {
  margin: 0;
  padding: 0;
}

main {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr 60px;
  align-items: center;
  justify-items: center;
  height: 100dvh;
}

section.timer-area h1 {
  font-size: 32vw;
  text-shadow: 0 0 0.1em rgba(0, 0, 0, 0.8);
  font-variant-numeric: tabular-nums;
}

section.timer-area h1.classic {
  font-family: 'Jersey';
  font-weight: 400;
  font-size: 40vw;
}

header {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row-reverse;
  align-items: center; 
}

section.timer-area {
  background: rgb(0 90 0);
  padding: 5em 10em;
  border-radius: 6em;
}

section.timer-area.warning {
  background: rgb(190 190 0);
}

section.timer-area.alert {
  background: rgb(190 0 0);
}

footer {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
  margin: 0;
  padding: 0;
}

button {
  background: #0e0e0e;
  color: white;
  border: 1px solid white;
  padding: 10px 20px;
  border-radius: 50px;
  transition: all 100ms ease-out;
  cursor: pointer;
}

button:hover {
  transform: scale(1.1);
  background-color: #3e3e3e;
  filter: brightness(1.1);
}

button:active {
  transform: scale(0.97);
  filter: brightness(0.9);
}

input {
  background: #0e0e0e;
  color: white;
  border: 1px solid white;
  padding: 10px 20px;
  border-radius: 5px;
  width: 30px;
}

hr {
  width: 20px;
  margin: 0;
}

.hidden {
  display: none;
}

svg {
  stroke: white;
  height: 22px;
}

#settingsButton {
  position: fixed;
  top: 5px;
  right: 5px;
  z-index: 100;
  padding: 5px;
  display: flex;
  justify-content: center;
  background: black;
  border: 1px solid white;
  border-radius: 55px;
  transition: all 100ms ease-out;
  cursor: pointer;
}

#settingsButton:hover {
  transform: scale(1.1);
  background: #3e3e3e;
}

#settingsButton > input[type="checkbox"] {
  display: none;
}

#settingsPanel {
  --panel-width: 300px;
  position: fixed;
  right: calc(-1 * var(--panel-width) - 10px);
  top: 0px;
  height: 100dvh;
  width: var(--panel-width);
  background:rgba(0, 0, 0, 0.8);
  box-sizing: border-box;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.8);
  transition: 300ms ease-out;
  padding: 50px 10px;
}

#settingsPanel label {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: 5px;
  margin-bottom: 5px;
  cursor: pointer;
  user-select: none;
}

#settingsPanel label:has(input[type="checkbox"]) {
  justify-content: flex-start;
  padding-left: 20px;
}

#settingsButton:has(input:checked) + #settingsPanel {
  right: 0px;
  transition: 100ms ease-out;
}

input[type="checkbox"] {
  width: 34px;
  height: 22px;
  border-radius: 50px;
  appearance: none;
  border: 0;
  position: relative;
  flex-grow: 0;
  transition: all 0.1s ease-in-out;
  padding: 0;
  cursor: pointer;
}

input[type="checkbox"]:foucs {
  outline: 3px solid green;
  outline-offset: 2px;
}

input[type="checkbox"]:before {
  content: "";
  display: block;
  position: absolute;
  top: 0px;
  left: 0px;
  width: 35px;
  height: 22px;
  border: 1px solid rgb(226, 226, 226);
  border-radius: 50px;
  background: rgb(84, 84, 84);
  transition: all 0.3s;
  box-sizing: border-box;
}

input[type="checkbox"]:checked:before {
  background: green;
}

input[type="checkbox"]:after {
  box-sizing: border-box;
  content: "";
  position: absolute;
  background: white;
  border: 1px solid rgb(157, 157, 157);
  top: 1px;
  left: 1px;
  display: block;
  width: 20px;
  height: 20px;
  border-radius: 50px;
  transition: all 0.1s;
  box-shadow: 0px 0px 2px rgba(0, 0, 0, 0.4);
}

input[type="checkbox"]:checked:after {
  left: 14px;
  content: "v";
  text-align: center;
  color: green;
  font-weight: 900;
  transform: scale(1.1)
}